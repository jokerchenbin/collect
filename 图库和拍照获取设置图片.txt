import java.io.File;  
  
import android.net.Uri;  
import android.os.Bundle;  
import android.os.Environment;  
import android.provider.MediaStore;  
import android.app.Activity;  
import android.content.Intent;  
import android.graphics.Bitmap;  
import android.graphics.drawable.BitmapDrawable;  
import android.graphics.drawable.Drawable;  
import android.view.View;  
import android.view.View.OnClickListener;  
import android.widget.Button;  
import android.widget.ImageView;  
import android.widget.Toast;  
  
public class MainActivity extends Activity implements OnClickListener {  
    private static final int IMAGE_REQUEST_CODE = 0;  
    private static final int CAMERA_REQUEST_CODE = 1;  
    private static final int RESIZE_REQUEST_CODE = 2;  
  
    private static final String IMAGE_FILE_NAME = "header.jpg";  
  
    private ImageView mImageHeader;  
  
    @Override  
    protected void onCreate(Bundle savedInstanceState) {  
        super.onCreate(savedInstanceState);  
        setContentView(R.layout.activity_main);  
  
        setupViews();  
    }  
  
    private void setupViews() {  
        mImageHeader = (ImageView) findViewById(R.id.image_header);  
        final Button selectBtn1 = (Button) findViewById(R.id.btn_selectimage);  
        final Button selectBtn2 = (Button) findViewById(R.id.btn_takephoto);  
        selectBtn1.setOnClickListener(this);  
        selectBtn2.setOnClickListener(this);  
    }  
  
    @Override  
    public void onClick(View v) {  
        switch (v.getId()) {  
        case R.id.btn_selectimage:  
		
			/*Intent intent = new Intent(Intent.ACTION_PICK, null);

		/**
		 * 下面这句话，与其它方式写是一样的效果，如果： intent.setData(MediaStore.Images
		 * .Media.EXTERNAL_CONTENT_URI); intent.setType(""image/*");设置数据类型
		 * 如果朋友们要限制上传到服务器的图片类型时可以直接写如 ："image/jpeg 、 image/png等的类型"
		 * 这个地方小马有个疑问，希望高手解答下： 就是这个数据URI与类型为什么要分两种形式来写呀？有什么区别？
		 */
		intent.setDataAndType(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, "image/*");
		activity.startActivityForResult(intent, AppConfig.DEFAULT_REQUEST);*/
		
            Intent galleryIntent = new Intent(Intent.ACTION_GET_CONTENT);  
            galleryIntent.addCategory(Intent.CATEGORY_OPENABLE);  
            galleryIntent.setType("image/*");  
            startActivityForResult(galleryIntent, IMAGE_REQUEST_CODE);  
            break;  
        case R.id.btn_takephoto:  
            if (isSdcardExisting()) {  
                Intent cameraIntent = new Intent(  
                        "android.media.action.IMAGE_CAPTURE");  
                cameraIntent.putExtra(MediaStore.EXTRA_OUTPUT, getImageUri());  
                cameraIntent.putExtra(MediaStore.EXTRA_VIDEO_QUALITY, 0);  
                startActivityForResult(cameraIntent, CAMERA_REQUEST_CODE);  
            } else {  
                Toast.makeText(v.getContext(), "请插入sd卡", Toast.LENGTH_LONG)  
                        .show();  
            }  
            break;  
        }  
    }  
  
    @Override  
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {  
        if (resultCode != RESULT_OK) {  
            return;  
        } else {  
            switch (requestCode) {  
            case IMAGE_REQUEST_CODE:  
                resizeImage(data.getData());  
                break;  
            case CAMERA_REQUEST_CODE:  
                if (isSdcardExisting()) {  
                    resizeImage(getImageUri());  
                } else {  
                    Toast.makeText(MainActivity.this, "未找到存储卡，无法存储照片！",  
                            Toast.LENGTH_LONG).show();  
                }  
                break;  
  
            case RESIZE_REQUEST_CODE:  
                if (data != null) {  
                    showResizeImage(data);  
                }  
                break;  
            }  
        }  
  
        super.onActivityResult(requestCode, resultCode, data);  
    }  
  
    private boolean isSdcardExisting() {  
        final String state = Environment.getExternalStorageState();  
        if (state.equals(Environment.MEDIA_MOUNTED)) {  
            return true;  
        } else {  
            return false;  
        }  
    }  
  
    public void resizeImage(Uri uri) {  
        Intent intent = new Intent("com.android.camera.action.CROP");  
        intent.setDataAndType(uri, "image/*");  
        intent.putExtra("crop", "true");  
        intent.putExtra("aspectX", 1);  
        intent.putExtra("aspectY", 1);  
        intent.putExtra("outputX", 150);  
        intent.putExtra("outputY", 150);  
        intent.putExtra("return-data", true);  
        startActivityForResult(intent, RESIZE_REQUEST_CODE);  
    }  
  
    private void showResizeImage(Intent data) {  
        Bundle extras = data.getExtras();  
        if (extras != null) {  
            Bitmap photo = extras.getParcelable("data");  
            Drawable drawable = new BitmapDrawable(photo);  
            mImageHeader.setImageDrawable(drawable);  
        }  
    }  
  
    private Uri getImageUri() {  
        return Uri.fromFile(new File(Environment.getExternalStorageDirectory(),  
                IMAGE_FILE_NAME));  
    }  
}  