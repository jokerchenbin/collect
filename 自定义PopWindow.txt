public void onClick(View v) {
    	switch (v.getId()) {
           case R.id.id_top_more:	
	          showPopupWindow(v);
	          break;
	}
    	}
	 private void showPopupWindow(View view) {//传入点击的视图

	        // 自定义的布局，作为显示的内容
	        View contentView = LayoutInflater.from(this).inflate(
	                R.layout.pop_window, null);
	        final PopupWindow popupWindow = new PopupWindow(contentView,
	                LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT, true);
	        // 设置按钮的点击事件
	       
	        //popupWindow.showAtLocation(contentView, Gravity.NO_GRAVITY, x, y)设置位置
	         popupWindow.setTouchable(true);
            
	        popupWindow.setTouchInterceptor(new View.OnTouchListener() {

				@Override
				public boolean onTouch(View v, MotionEvent event) {
					// 这里如果返回true的话，touch事件将被拦截
	                // 拦截后 PopupWindow的onTouchEvent不被调用，这样点击外部区域无法dismiss
					return false;
				}
	        });

	        // 如果不设置PopupWindow的背景，无论是点击外部区域还是Back键都无法dismiss弹框
	        // API的一个bug
	        popupWindow.setBackgroundDrawable(getResources().getDrawable(R.drawable.popwindow_back));

	        // 设置好参数之后show
	        popupWindow.showAsDropDown(view);
	    }

